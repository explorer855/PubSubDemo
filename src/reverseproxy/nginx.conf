worker_processes auto;
pid nginx.pid;
user nginx;

events {
    # determines how much clients will be served per worker
    # max clients = worker_connections * worker_processes
    # max clients is also limited by the number of socket connections available on the system (~64k)
    worker_connections 65535;
    # optimized to serve many clients with each thread, essential for linux
    use epoll;
    # accept as many connections as possible, may flood worker connections if set too low
    multi_accept on;
}

http {
	include proxy.conf;
	include bad_useragents_check.conf;
	#include badreferers_list.conf;
	#include baduseragents_list.conf;
	#include geo_devratelimit.conf;
	#include gzip.conf;
	#include headers.conf;
	#include sslconfigs.conf;
	#include logformat.conf;
	##########################			Access Log BLock		####################

	log_format compression '$remote_addr - $server_name [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        ' "$http_user_agent" "$proxy_add_x_forwarded_for" "$gzip_ratio" '
                        'request_time="$request_time" upstream_connect_time="$upstream_connect_time" upstream_header_time="$upstream_header_time" upstream_response_time="$upstream_response_time"';
	access_log 	on;
	access_log	/var/log/nginx/access.log compression;
	error_log 	/var/log/nginx/error.log;

	upstream api_pubsub {
		server pubsubapi:80;
	}

	## Pub/Sub Api App Block
    server {
		listen      7001;
		
        location /healthcheck.html {
          return 200 'OK';
        }

        location / {
			## Block download agents ##
			if ($disallow_agents) {
				return 403; 
			}
			## Cache-Options Requests
			if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Origin' '*';
				add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE';
				# Custom headers and headers various browsers *should* be OK with but aren't
				add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
				# Tell client that this pre-flight info is valid for 20 days
				add_header 'Access-Control-Max-Age' 31556952;
				add_header 'Content-Type' 'text/plain charset=UTF-8';
				add_header 'Content-Length' 0;
				return 204;
			}
			error_page 403 444 502 503 504 /500.html;
			location = /500.html {
				root   /etc/nginx/html;
			}
			## Request / Rate Limit
			proxy_buffering			off;
			proxy_buffer_size 		4k;
            proxy_pass				http://api_pubsub;
        }
    }
	## End Of Block
}